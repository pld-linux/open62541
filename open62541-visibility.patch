ua2json tool requires UA_NetworkMessage_* visible from library
--- open62541-1.3.2/src/pubsub/ua_pubsub_networkmessage.h.orig	2022-06-24 11:05:00.000000000 +0200
+++ open62541-1.3.2/src/pubsub/ua_pubsub_networkmessage.h	2022-07-03 07:55:24.911256767 +0200
@@ -270,6 +270,7 @@ UA_NetworkMessage_updateBufferedNwMessag
 
 /* If dataToEncryptStart not-NULL, then it will be set to the start-position of
  * the payload in the buffer. */
+UA_EXPORT
 UA_StatusCode
 UA_NetworkMessage_encodeBinary(const UA_NetworkMessage* src,
                                UA_Byte **bufPos, const UA_Byte *bufEnd,
@@ -300,6 +301,7 @@ UA_NetworkMessage_decodePayload(const UA
 UA_StatusCode
 UA_NetworkMessage_decodeFooters(const UA_ByteString *src, size_t *offset, UA_NetworkMessage *dst);
 
+UA_EXPORT
 UA_StatusCode
 UA_NetworkMessage_decodeBinary(const UA_ByteString *src, size_t *offset,
                                UA_NetworkMessage* dst);
@@ -308,6 +310,7 @@ UA_NetworkMessage_decodeBinary(const UA_
 UA_StatusCode
 UA_NetworkMessageHeader_decodeBinary(const UA_ByteString *src, size_t *offset, UA_NetworkMessage *dst);
 
+UA_EXPORT
 size_t
 UA_NetworkMessage_calcSizeBinary(UA_NetworkMessage *p,
                                  UA_NetworkMessageOffsetBuffer *offsetBuffer);
@@ -321,6 +324,7 @@ UA_NetworkMessage_signEncrypt(UA_Network
                               UA_Byte *sigStart);
 #endif
 
+UA_EXPORT
 void
 UA_NetworkMessage_clear(UA_NetworkMessage* p);
 
@@ -329,18 +333,21 @@ UA_NetworkMessage_delete(UA_NetworkMessa
 
 
 #ifdef UA_ENABLE_JSON_ENCODING
+UA_EXPORT
 UA_StatusCode
 UA_NetworkMessage_encodeJson(const UA_NetworkMessage *src,
                              UA_Byte **bufPos, const UA_Byte **bufEnd, UA_String *namespaces,
                              size_t namespaceSize, UA_String *serverUris,
                              size_t serverUriSize, UA_Boolean useReversible);
 
+UA_EXPORT
 size_t
 UA_NetworkMessage_calcSizeJson(const UA_NetworkMessage *src,
                                UA_String *namespaces, size_t namespaceSize,
                                UA_String *serverUris, size_t serverUriSize,
                                UA_Boolean useReversible);
 
+UA_EXPORT
 UA_StatusCode UA_NetworkMessage_decodeJson(UA_NetworkMessage *dst, const UA_ByteString *src);
 #endif
 
